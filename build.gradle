apply plugin: 'java'
apply plugin: 'application'

jar {
  manifest {
    attributes 'Main-Class': 'com.byteimagination.gitomater.Main'
  }
}

mainClassName = "com.byteimagination.gitomater.Main"

sourceCompatibility = 1.6
version = '1.0'

repositories {
  mavenCentral()
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.11'
}

task showHelp(dependsOn: 'classes', type: JavaExec) {
  description 'Displays help'
  main = mainClassName
  classpath = sourceSets.main.runtimeClasspath
  args 'help'
}

task init << {
  if (!new File('gitolite-admin').exists())
    project.exec {
      commandLine = ['git']
      args = ['clone', gitomaterGitoliteRepository, 'gitolite-admin']
    }
  else
    println 'Already initialized.'
}

task addRepository(dependsOn: 'classes', type: JavaExec) {
  description 'Adds new repository. Execute: gradle addRepository -PrepositoryName=nameOfRepo -Pprivileges=\'RW=a b, RW+=d e f\''
  main = mainClassName
  classpath = sourceSets.main.runtimeClasspath
  args 'addRepository', 'gitolite-admin', "${ -> repositoryName}", "${ -> privileges}"
}

task addPrivileges(dependsOn: 'classes', type: JavaExec) {
  description 'Adds repository privileges. Execute: gradle addPrivileges -PrepositoryName=nameOfRepo -Pprivileges=\'RW=a b, RW+=d e f\''
  main = mainClassName
  classpath = sourceSets.main.runtimeClasspath
  args 'addPrivileges', 'gitolite-admin', "${ -> repositoryName}", "${ -> privileges}"
}
